

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_45406770103725904509890104231914678754265961643298482440409237765195072368733672685631587979562241346 = Integer(45406770103725904509890104231914678754265961643298482440409237765195072368733672685631587979562241346); _sage_const_4 = Integer(4); _sage_const_42764372489624602989152383173709795403796386376344802703066528962696589468564501897000324538498812883 = Integer(42764372489624602989152383173709795403796386376344802703066528962696589468564501897000324538498812883); _sage_const_3 = Integer(3); _sage_const_37672731284607729155480237866218406485893919987814572486490754064498223292180995037432012350216544417 = Integer(37672731284607729155480237866218406485893919987814572486490754064498223292180995037432012350216544417); _sage_const_55462425449896168600390367564436787134741290054741525865807795492693442375757671549228298754153509613 = Integer(55462425449896168600390367564436787134741290054741525865807795492693442375757671549228298754153509613); _sage_const_6778690755895128168751737959454411972187106669733266559106651743590246692689398562032067795146717162848413292299573013038367117575935673619248776925892672201933424467005517162118712395701681263279585553299544107860626811206695844212433182471614373859755499052750286667585910623259340579702249091680614010546399687179863049582625671630876108790555962058243905551470611736992489702159306356102118074450673803009393106039180751255185874156459283395261688861 = Integer(6778690755895128168751737959454411972187106669733266559106651743590246692689398562032067795146717162848413292299573013038367117575935673619248776925892672201933424467005517162118712395701681263279585553299544107860626811206695844212433182471614373859755499052750286667585910623259340579702249091680614010546399687179863049582625671630876108790555962058243905551470611736992489702159306356102118074450673803009393106039180751255185874156459283395261688861); _sage_const_35671 = Integer(35671); _sage_const_100 = Integer(100)
def hensels_lifting(f, p, k):
    df = f.derivative()

    # convert function on GF(p)
    R = PolynomialRing(GF(p), "y", names=('y',)); (y,) = R._first_ngens(1)
    f2 = R(f.list())
    base = Integer(f2.roots()[_sage_const_0 ][_sage_const_0 ])

    prev_r = base
    for i in range(_sage_const_2 , k+_sage_const_1 ):
        pi = p ** i
        r = prev_r
        fr = f(r)
        dfr = df(r)
        s = Integer( r - fr * inverse_mod(Integer(dfr), pi) )
        prev_r = Integer(Mod(s, pi))

        # very slow
        # R.<z> = PolynomialRing(GF(pi), "z")
        # f3 = R(f.list())
        # assert f3(s) == 0
    return prev_r


x = polygen(QQ, 'x')
f = (
    _sage_const_45406770103725904509890104231914678754265961643298482440409237765195072368733672685631587979562241346  * x
    ** _sage_const_4  + _sage_const_42764372489624602989152383173709795403796386376344802703066528962696589468564501897000324538498812883  * x
    ** _sage_const_3  + _sage_const_37672731284607729155480237866218406485893919987814572486490754064498223292180995037432012350216544417  * x
    ** _sage_const_2 
    + _sage_const_55462425449896168600390367564436787134741290054741525865807795492693442375757671549228298754153509613  * x
    + _sage_const_6778690755895128168751737959454411972187106669733266559106651743590246692689398562032067795146717162848413292299573013038367117575935673619248776925892672201933424467005517162118712395701681263279585553299544107860626811206695844212433182471614373859755499052750286667585910623259340579702249091680614010546399687179863049582625671630876108790555962058243905551470611736992489702159306356102118074450673803009393106039180751255185874156459283395261688861 
)
p = _sage_const_35671 
k = _sage_const_100 

from Crypto.Util.number import long_to_bytes
print(long_to_bytes(hensels_lifting(f, p, k)))

